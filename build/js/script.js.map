{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["\"use strict\";\n\nconst tooltips = document.querySelectorAll(\".all-tooltip .tooltip\");\nconst fullDiv = document.querySelector(\"section\");\nconst container = document.querySelector(\".container\");\nlet timeoutId;\nwindow.addEventListener(\"resize\", contentPosition);\nwindow.addEventListener(\"DOMContentLoaded\", contentPosition);\n\nfunction contentPosition() {\n  tooltips.forEach(tooltip => {\n    const pin = tooltip.querySelector(\".pin\");\n    const content = tooltip.querySelector(\".tooltip-content\");\n    const arrow = tooltip.querySelector(\".arrow\");\n    const pinLeft = pin.offsetLeft;\n\n    if (pinLeft + content.offsetWidth / 2 > fullDiv.offsetWidth) {\n      const extraLeft = fullDiv.offsetWidth - (pinLeft + content.offsetWidth / 2); // console.log('right-conflict', tooltip)\n\n      content.style.left = pinLeft - content.offsetWidth / 2 + extraLeft - 40 + \"px\";\n      content.style.top = pin.offsetTop + 40 + \"px\";\n    } else if (pin.offsetLeft + container.offsetLeft < content.offsetWidth / 2) {\n      // console.log('left conflict', pin.offsetLeft)\n      content.style.left = -container.offsetLeft + \"px\";\n      content.style.top = pin.offsetTop + 30 + \"px\";\n    } else {\n      content.style.left = `${pinLeft - content.offsetWidth / 2}px`;\n      content.style.top = `${pin.offsetTop + 30}px`;\n    }\n\n    arrow.style.left = `${pinLeft - content.offsetLeft}px`;\n    content.style.zIndex = 50;\n  });\n}\n\ntooltips.forEach(tooltip => {\n  const pin = tooltip.querySelector(\".pin\");\n  const content = tooltip.querySelector(\".tooltip-content\");\n  pin.addEventListener(\"mouseover\", () => {\n    console.log(pin.offsetLeft);\n    tooltip.classList.add(\"active\");\n  });\n  pin.addEventListener(\"mouseleave\", () => {\n    timeoutId = setTimeout(() => {\n      if (!tooltip.classList.contains(\"content-hover\")) {\n        tooltip.classList.remove(\"active\");\n      }\n    }, 2000);\n  });\n  content.addEventListener(\"mouseover\", () => {\n    clearTimeout(timeoutId);\n    tooltip.classList.add(\"active\");\n    tooltip.classList.add(\"content-hover\");\n  });\n  content.addEventListener(\"mouseleave\", () => {\n    timeoutId = setTimeout(() => {\n      tooltip.classList.remove(\"active\");\n      tooltip.classList.remove(\"content-hover\");\n    }, 2000);\n  });\n}); // // *********************\n// // This Code is for only the floating card in right bottom corner\n// // **********************\n// const WebCifarIcon = document.querySelector(\"#webCifar-icon\");\n// const WebCifarEl = document.querySelector(\"#webCifar\");\n// const close = WebCifarEl.querySelector(\".close\");\n// const youtubeLink = document.querySelector(\".youtubeLink\");\n// WebCifarIcon.addEventListener(\"click\", () => {\n//   WebCifarEl.classList.add(\"active\");\n// });\n// close.addEventListener(\"click\", () => {\n//   WebCifarEl.classList.remove(\"active\");\n// });\n// youtubeLink.setAttribute(\"href\", \"https://youtu.be/e_jEquJo7y8\");\n\nfunction getCursorPosition(elem, event) {\n  const rect = elem.getBoundingClientRect();\n  const x = Math.round(event.clientX - rect.left);\n  const y = Math.round(event.clientY - rect.top);\n  return {\n    x,\n    y\n  };\n}\n\nconst buttons = document.querySelectorAll('.content__button');\nbuttons.forEach(btn => {\n  btn.addEventListener('click', function (e) {\n    getCursorPosition(btn, e);\n    const coords = getCursorPosition(btn, e);\n    const x = coords.x;\n    const y = coords.y;\n    const ripples = document.createElement('span');\n    ripples.classList.add(\"bubble\");\n    ripples.style.left = `${x}px`;\n    ripples.style.top = `${y}px`;\n    this.appendChild(ripples);\n    setTimeout(() => {\n      ripples.remove();\n    }, 500);\n  });\n}); // -------------- отбивает разряды + ₽\n\nfunction splitPrice(price) {\n  price = price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  return `${price} ₽`;\n}\n\nlet priceDiv = document.querySelectorAll(\".js-price\");\npriceDiv.forEach(div => div.textContent = splitPrice(div.textContent));"],"file":"script.js"}